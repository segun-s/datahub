name: Build and Publish - Datahub services

on:
  workflow_dispatch:
    inputs:
      imageTag:
        description: 'Tag of the image to build'
        required: true
        default: 'test'
      appName:
        type: choice
        description: 'Select the app to build'
        options:
          - datahub-gms
          - datahub-ingestion



env:
  TAG: "latest"
  ORG_NAME: "sefastech"
  REPO_NAME: "clutta"

jobs:
  build-microservice:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Shorten SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Get AppName and Path
        run: |
          if [ "${{ github.event.inputs.appName }}" == "datahub-gms" ]; then
            echo "APP_NAME=datahub-gms" >> $GITHUB_ENV
            echo "APP_PATH=docker/datahub-gms" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.appName }}" == "datahub-ingestion" ]; then
            echo "APP_NAME=datahub-ingestion" >> $GITHUB_ENV
            echo "APP_PATH=docker/datahub-ingestion" >> $GITHUB_ENV
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - uses: gradle/actions/setup-gradle@v4

      - name: Check out the repo
        uses: acryldata/sane-checkout-action@v3

      - name: Pre-build artifacts for docker image
        if: ${{ github.event.inputs.appName == 'datahub-gms' }}
        run: |
          ./gradlew :metadata-service:war:build -x test --parallel
          mv ./metadata-service/war/build/libs/war.war .

      - name: Build and Optionally Push
        uses: docker/build-push-action@v5
        with:
          build-args: |
            GH_ACCESS_USER=${{ secrets.GH_ACCESS_USER }}
            GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }}
          context: ./${{ env.APP_PATH }}
          file: ./${{ env.APP_PATH }}/Dockerfile
          push: ${{ github.event.action == 'closed' && github.event.pull_request.merged == true }}
          tags: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}:${{ github.event.inputs.imageTag }}, ${{ env.ORG_NAME }}/${{ env.APP_NAME }}:${{ env.SHORT_SHA }}